--LO SCOPO DI QUESTO CODICE è AVERE SEMPRE A PORTATA DI MANO UN TUTORIAL BASICO DI SQL
--PUBBLICARLO SU GITHUB PER ME SIGNIFICA AIUTARE ALTRE PERSONE CON QUESTO CODICE E CON QUESTI CONTENUTI
--HO TROVATO TUTTO MOLTO INTERESSANTE DA BEGINNERS E MI HA PERMESSO DI INIZIARE STUDI PIù COMPLESSI IN MATERIA SQL

--Primo Video Tutorial: https://www.youtube.com/watch?v=RSlqWnP-Dy8&list=PLUaB-1hjhk8GT6N5ne2qpf603sF26m2PW&index=2

--CREATE TABLE EmployeeDemographics
--(EmployeeID int,
--FirstName varchar(50),
--LastName varchar(50),
--Age int,
--Gender varchar(50)
--)

--CREATE TABLE EmployeeSalary
--(EmployeeID int,
--JobTitle varchar(50),
--Salary int)


--INSERT INTO EmployeeDemographics VALUES
--(1001, 'Jim', 'Halpert', 30, 'Male')


--INSERT INTO EmployeeDemographics VALUES
--(1002, 'Pam', 'Beasley', 30, 'Female'),
--(1003, 'Dwight', 'Schrute', 29, 'Male'),
--(1004, 'Angela', 'Martin', 31, 'Female'),
--(1005, 'Toby', 'Flenderson', 32, 'Male'),
--(1006, 'Michael', 'Scott', 35, 'Male'),
--(1007, 'Meredith', 'Palmer', 32, 'Female'),
--(1008, 'Stanley', 'Hudson', 38, 'Male'),
--(1009, 'Kevin', 'Malone', 31, 'Male')

--INSERT INTO EmployeeSalary VALUES
--(1001, 'Salesman', 45000)

--INSERT INTO EmployeeSalary VALUES
--(1002, 'Receptionist', 36000),
--(1003, 'Salesman', 63000),
--(1004, 'Accountant', 47000),
--(1005, 'HR', 50000),
--(1006, 'Regional Manager', 65000),
--(1007, 'Supplier Relations', 41000),
--(1008, 'Salesman', 48000),
--(1009, 'Accountant', 42000)

--Secondo Video Tutorial: https://www.youtube.com/watch?v=PyYgERKq25I&list=PLUaB-1hjhk8GT6N5ne2qpf603sF26m2PW&index=2

--SELEZIONIAMO TUTTE LE COLONNE DALLA TAVOLA EmployeeDemographics 
--SELECT *
--FROM EmployeeDemographics

--SELEZIONIAMO SOLAMENTE LA COLONNA FirstName DALLA TABELLA EmployeeDemographics
--SELECT FirstName
--FROM EmployeeDemographics

--SELEZIONIAMO LA COLONNA FirstName e aggiungiamo anche la colonna LastName DALLA TABELLA EmployeeDemographics
--SELECT FirstName, LastName
--FROM EmployeeDemographics

--VOGLIAMO SELEZIONARE SOLO LE MIGLIORI 5 RIGHE DALLA TABELLA EmployeeDemographics DOBBIAMO USARE LA FUNZIONE TOP SEGUITA
--DAL NUMERO CHE CI INTERESSA, RICORDIAMOCI DI AGGIUNGERE *
--SELECT TOP 5 *
--FROM EmployeeDemographics

--QUANDO USIAMO LA FUNZIONE DISTINCT(Colonna) DOVREBBE RITORNARTI TUTTO QUELLO CONTENUTO IN QUELLA COLONNA IN MODO DISTINTO
--QUINDI BASANDOSI SULL'UNICITà DEL CONTENUTO
--SELECT DISTINCT(EmployeeID)
--FROM EmployeeDemographics

--DIFATTI PROVANDO LA FUNZIONE SULLA COLONNA Gender TROVIAMO I DUE POSSIBILI VALORI DISTINTI IN QUELLA COLONNA 
--SELECT DISTINCT(Gender)
--FROM EmployeeDemographics

--IMPARIAMO UNA NUOVA FUNZIONE UTILE: COUNT
--QUANDO USIAMO QUESTA FUNZIONE ESSA CONTERà I SINGOLI VALORI NELLA COLONNA CHE ABBIAMO SCELTO ATTENZIONE PARTICOLARE
--QUANDO RITORNA VALORI NUMERICI INASPETTATI, POTREBBERO ESSERCI VALORI VUOTI O NULL
--SELECT COUNT(LastName)
--FROM EmployeeDemographics

--ANDIAMO A CONTARE I VALORI NELLA COLONNA LASTNAME, MA SALVIAMO QUESTO CONTATORE "AS" LastNameCount, OSSIA SALVIAMO
--IL RISULTATO IN UNA NUOVA COLONNA, O IN UNA GIà ESISTENTE
--SELECT COUNT(LastName) AS LastNameCount
--FROM EmployeeDemographics

--ANDIAMO AD IMPARARE LE FUNZIONI MAX MIN AVG
--PER FARE QUESTO SFRUTTIAMO LA TABELLA CHE CI SIAMO COSTRUITI EmployeeSalary

--SELECT *
--FROM EmployeeSalary

--COSì VEDIAMO SUBITO QUAL è IL MASSIMO VALORE NUMERICO NELLA COLONNA SALARY
--SELECT MAX(Salary)
--FROM EmployeeSalary

--SEMPLICEMENTE IL MIN è LA STESSA COSA
--SELECT MIN(Salary)
--FROM EmployeeSalary

--IDEM PER LA MEDIA DEI VALORI IN QUELLA COLONNA
--SELECT AVG(Salary)
--FROM EmployeeSalary

--PREMENDO CTRL+U POSSIAMO SCEGLIERE IN QUALE DB OPERARE, METTIAMO CASO CHE CAMBIAMO IN "MASTER" COSA SUCCEDE
--AL NOSTRO LAVORO? IN PRATICA NON POTREMO PIù ESEGUIRE COMANDI PERCHè IN QUEL DB NON ABBIAMO ALCUNA TABELLA
--COSA POSSIAMO FARE?

--SIAMO IN UN ALTRO DB E VOGLIAMO RICHIAMARE UNA TABELLA CHE è NEL DB SQL Tutorial, PER FARLO DOBBIAMO UTILIZZARE
--NELLA FROM IL NOME DEL DB SEGUITO DA .dbo E SEGUIDO DA .NOMETABELLA
--SELECT *
--FROM [SQL Tutorial].dbo.EmployeeSalary

--Terzo Video Tutorial: https://www.youtube.com/watch?v=A9TOuDZTPDU

--INIZIAMO A COMPRENDERE COME FUNZIONA IL TERZO COMANDO FONDAMENTALE IN SQL, IL WHERE: 
--CON WHERE ANDIAMO A CERCARE QUALCOSA IN PARTICOLARE ALL'INTERNO DELLE NOSTRE TABELLE E PER FARLO DOBBIAMO
--PORRE DELLE CONDIZIONI

--QUESTO PRIMO ESEMPIO è PER SELEZIONARE TUTTO CIò CHE RIGUARDA LA CONDIZIONE IN CUI NELLA COLONNA FIRSTNAME
--C'è IL CARATTERE JIM
--SELECT *
--FROM EmployeeDemographics
--WHERE FirstName = 'Jim'

--QUESTO COMANDO FA L'OPPOSTO PERCHè USA COME CONDIZIONE <> CHE SIGNIFICA NON UGUALE
--SELECT *
--FROM EmployeeDemographics
--WHERE FirstName <> 'Jim'

--PRIMA ABBIAMO USATO UNA CONDIZIONE SU UN CARATTERE, ORA USIAMO UNA CONDIZIONE NUMERICA
--SELECT *
--FROM EmployeeDemographics
--WHERE Age > 30

--SELECT *
--FROM EmployeeDemographics
--WHERE Age <= 32

--PROVIAMO A PORRE PIù CONDIZIONI, E DI DIVERSO TIPO NEL COMANDO WHERE, è MOLTO IMPORTANTE SAPERLO USARE CORRETTAMENTE
--PER SVOLGERE L'ANALISI DEI DB
--SELECT *
--FROM EmployeeDemographics
--WHERE Age <= 32 AND Gender = 'Male'

--COSA CAMBIA FRA AND - OR ?
--QUANDO UTILIZZIAMO AND, ANDIAMO A SELEZIONE LA RICERCA PER I VALORI CHE SODDISFANO ENTRAMBI I CRITERI
--QUANDO UTILIZZIAMO OR, ANDIAMO A SELEZIONARE LA RICERCA PER I VALORI CHE SODDISFANO O UNO O L'ALTRO
--SELECT *
--FROM EmployeeDemographics
--WHERE Age <= 32 OR Gender = 'Male'

--IMPARIAMO AD USARE LIKE:
--COSA SIGNIFICA QUESTA QUERY?
--DOBBIAMO FARE UNA RICERCA FRA TUTTI I LASTNAME CHE CONTENGONO IL CARATTERE 'S' MA NON SOLO PERCHè AGGIUNGENDO 
--IL SIMBOLO % AL SUO FIANCO, AGGIUNGIAMO UN ALTRA CONDIZIONE, OSSIA CHE DEVE INIZIARE PER 'S' ALTRIMENTI LA CONDIZIONE
--SAREBBE STATA DIVERSA
--SELECT *
--FROM EmployeeDemographics
--WHERE LastName LIKE 'S%'

--E SE AVESSIMO POSTO LA CONDIZIONE DEL LIKE '%S%' COSI?
--OTTENIAMO TUTTI I LASTNAME CHE CONTENGONO UNA S
--SELECT *
--FROM EmployeeDemographics
--WHERE LastName LIKE '%S%'

--ATTENZIONE A QUESTI CRITERI DI RICERCA PERCHè PER PRIMA COSA SEGUONO L'ORDINE DELL'IMMISSIONE
--QUINDI QUANDO ABBIAMO A CHE FARE CON CHART DOBBIAMO RISPETTARE IL LORO ORDINE INIZIALE ALTRIMENTI LA RICERCA
--PRODUCE RISULTATI SBAGLIATI O NULLI

--SELECT *
--FROM EmployeeDemographics
--WHERE LastName LIKE 'S%c%ott%'

--SELECT *
--FROM EmployeeDemographics
--WHERE LastName LIKE 'S%ott%c%'

--IMPARIAMO AD USARE NULL E NOT NULL ADESSO:

--SELECT *
--FROM EmployeeDemographics
--WHERE FirstName is NULL

--OVVIAMENTE NON CI RITORNA NIENTE PERCHè NON CI SONO VALORI NULLI ALL'INTERNO DI FIRSTNAME

--SELECT *
--FROM EmployeeDemographics
--WHERE FirstName is NOT NULL

--MENTRE NOT NULL CI RITORNA L'INTERA TABELLA

--CI SONO TANTISSIMI UTILIZZI DI QUESTE DUE FUNZIONI, LI VEDREMO NEI PROSSIMI TUTORIAL E SOPRATUTTO QUANDO
--SI ESEGUONO ANALISI DI DATI

--ANDIAMO A STUDIARE IN PER COMPLETARE IL TERZO TUTORIAL:
--E' UN COMANDO SIMILE A LIKE 

--SELECT *
--FROM EmployeeDemographics
--WHERE FirstName IN('Jim','Michael')

--QUINDI CON IL COMANDO IN ABBIAMO INCLUSO ALTRE CONDIZIONI ALLA MIA RICERCA WHERE NELLA COLONNA FIRSTNAME
--IN PRATICA è UN MODO CONDENSATO PER ESPRIMERE =

--Quarto Video Tutorial: https://www.youtube.com/watch?v=LXwfzIRD-Ds
--Questo è il video conclusivo della serie Beginners, poi dobbiamo passare al livello Intermedio
